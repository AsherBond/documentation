<?xml version="1.0" encoding="utf-8"?><?workdir /Users/scottb/Documents/git/documentation/admin_guide/temp/temp20120430200635367/admin_guide?><?path2project ../?><concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="system_oview" ditaarch:DITAArchVersion="1.2" domains="(topic concept)                            (topic hi-d)                             (topic ut-d)                             (topic indexing-d)                            (topic hazard-d)                            (topic abbrev-d)                            (topic pr-d)                             (topic sw-d)                            (topic ui-d)    " class="- topic/topic concept/concept " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="concept:1">
 <title class="- topic/title " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="title:1">Cloud Overview</title>
 
 <prolog class="- topic/prolog "><copyright class="- topic/copyright " xtrc="copyright:1" xtrf="/Users/scottb/Documents/git/documentation/ag.ditamap">
			<copyryear class="- topic/copyryear " xtrc="copyryear:1" xtrf="/Users/scottb/Documents/git/documentation/ag.ditamap" year="2012"/>
			<copyrholder class="- topic/copyrholder " xtrc="copyrholder:1" xtrf="/Users/scottb/Documents/git/documentation/ag.ditamap">Eucalyptus Systems</copyrholder>
		</copyright><metadata class="- topic/metadata "><prodinfo class="- topic/prodinfo " xtrc="prodinfo:1" xtrf="/Users/scottb/Documents/git/documentation/ag.ditamap">
			<prodname class="- topic/prodname " xtrc="prodname:1" xtrf="/Users/scottb/Documents/git/documentation/ag.ditamap">Eucalyptus</prodname>
			<vrmlist class="- topic/vrmlist " xtrc="vrmlist:1" xtrf="/Users/scottb/Documents/git/documentation/ag.ditamap">
				<vrm class="- topic/vrm " version="3.0" xtrc="vrm:1" xtrf="/Users/scottb/Documents/git/documentation/ag.ditamap"/>
			</vrmlist>
		</prodinfo></metadata></prolog><conbody class="- topic/body  concept/conbody " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="conbody:1">
 	<p class="- topic/p " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="p:1">Eucalyptus is comprised of six components: Cloud Controller, Walrus, Cluster Controller,
 	Storage Controller, Node Controller, and an optional VMWare Broker. Each component is a stand-alone web service. This architecture allows Eucalyptus both to expose each web service as a well-defined, language-agnostic API, and to support existing web service standards for secure communication between its components.</p>
 	<dl class="- topic/dl " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dl:1">
 		<dlentry class="- topic/dlentry " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dlentry:1">
 			<dt class="- topic/dt " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dt:1">Cloud Controller</dt>
 			<dd class="- topic/dd " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dd:1">The Cloud Controller (CLC) is the entry-point into the cloud for administrators, developers,
 				project managers, and end-users. The CLC queries the Node Controller for information about resources, makes high-level scheduling decisions, and makes requests to the Cluster Controllers. As the interface to the management platform, the CLC is responsible for exposing and managing the underlying virtualized resources (servers, network, and storage). You can access the CLC through Amazon’s Elastic Compute Cloud (EC2) and through a web-based Dashboard.</dd>
 		</dlentry>
 		<dlentry class="- topic/dlentry " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dlentry:2">
 			<dt class="- topic/dt " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dt:2">Walrus</dt>
 			<dd class="- topic/dd " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dd:2">Walrus allows users to store persistent data, organized as buckets and objects. You can use
 				Walrus to create, delete, and list buckets, or to put, get, and delete objects, or to set
 				access control policies. Walrus is interface compatible with Amazon’s Simple Storage Service
 				(S3). It provides a mechanism for storing and accessing virtual machine images and user data.
 				Walrus can be accessed by end-users, whether the user is running a client from outside the cloud or from a virtual machine instance running inside the cloud.</dd>
 		</dlentry>
 		<dlentry class="- topic/dlentry " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dlentry:3">
 			<dt class="- topic/dt " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dt:3">Cluster Controller</dt>
 			<dd class="- topic/dd " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dd:3">The Cluster Controller (CC) generally executes on a machine that has network connectivity to both the machines running the Node Controller (NC) and to the machine running the CLC. CCs gather information about a set of node machines and schedules virtual machine (VM) execution on specific nodes. The CC also manages the virtual machine networks. All nodes associated with a single CC must be in the same subnet.</dd>
 		</dlentry>
 		<dlentry class="- topic/dlentry " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dlentry:4">
 			<dt class="- topic/dt " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dt:4">Storage Controller</dt>
 			<dd class="- topic/dd " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dd:4">The Storage Controller (SC) provides functionality similar to the Amazon Elastic Block Store (Amazon EBS). The SC is capable of interfacing with various storage systems (NFS, iSCSI, SAN devices, etc.). Elastic block storage exports storage volumes that can be attached by a VM and mounted or accessed as a raw block device.  EBS volumes persist past VM termination and are commonly used to store persistent data. An EBS volume cannot be shared between VMs and can only be accessed within the same availability zone in which the VM is running. Users can create snapshots from EBS volumes. Snapshots are stored in Walrus and made available across availability zones. Eucalyptus with SAN support lets you use your enterprise-grade SAN devices to host EBS storage within a Eucalyptus cloud.</dd>
 		</dlentry>
 		<dlentry class="- topic/dlentry " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dlentry:5">
 			<dt class="- topic/dt " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dt:5">Node Controller</dt>
 			<dd class="- topic/dd " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dd:5">The Node Controller (NC) executes on any machine that hosts VM instances. The NC controls VM activities, including the execution, inspection, and termination of VM instances. It also fetches and maintains a local cache of instance images, and it queries and controls the system software (host OS and the hypervisor) in response to queries and control requests from the CC. The NC is also responsible for the management of the virtual network endpoint.</dd>
 		</dlentry>
 		<dlentry class="- topic/dlentry " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dlentry:6">
 			<dt class="- topic/dt " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dt:6">VMware Broker</dt>
 			<dd class="- topic/dd " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="dd:6">VMware Broker (Broker) is an optional Eucalyptus component activated only in versions of
 				Eucalyptus with VMware support. Broker enables Eucalyptus to deploy virtual machines (VMs) on
 				VMware infrastructure elements. Broker mediates all interactions between the CC and VMware
 				hypervisors (ESX/ESXi) either directly or through VMware vCenter. For more information about
 				working with vSphere Server, see <xref href="bp_vsphere.xml" class="- topic/xref " xtrf="/Users/scottb/Documents/git/documentation/admin_guide/system_concepts.dita" xtrc="xref:1" type="concept"><?ditaot gentext?>Working with vSphere<?ditaot genshortdesc?><desc class="- topic/desc "/></xref>.</dd>
 		</dlentry>
 	</dl>
 </conbody>
<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrc="topicref:10" xtrf="/Users/scottb/Documents/git/documentation/ag.ditamap"><link class="- topic/link " mapclass="- map/topicref " type="concept" xtrc="topicref:9" xtrf="/Users/scottb/Documents/git/documentation/ag.ditamap" href="../admin_guide/managing_system.xml" role="parent"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Managing the Cloud</linktext><?ditaot genshortdesc?><desc class="- topic/desc "/></link></linkpool></related-links>
</concept>