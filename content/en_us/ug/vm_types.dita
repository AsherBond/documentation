<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="vm_types">
 <title>Virtual Machine Types</title>
 <shortdesc></shortdesc>
 <conbody>
 	<p>A virtual machine type, known as a VM type, defines the number of CPUs, the size of memory, and
 		the size of storage that is given to an instance when it boots. There are five pre-defined
 		VM types in Eucalyptus. You can change the quantity of resources associated with each of the five
 		VM types, but you cannot change the name of the VM types or the number of VM types available. If you
 		customize the sizes they must be well-ordered. That means that the CPU, memory, and storage
 		sizes of the next VM type must be equal to, or larger than, the size of the preceding VM type.  </p>
 	<p/>
 	<p>
 		<image href="../eucabook/3.2-DBMLectureFiles/3.2-06ImageInstanceManagement/InstanceManagement/images/Virtual-Machine-Types.png" placement="break" id="image_lbg_ddz_1h" scale="90"
 			alt="Console screenshot of VM types"/>
 	</p>
 	<p/>
 	<p>The VM type used to instantiate an EMI must have a defined disk size larger then the EMI file.
 		If a 6GB EMI is loaded into an instance with a VM type defined with a 5GB disk, it will fail to
 		boot. The status of the instance will show as <i>pending</i>.  The pending status is the result
 		of the fact that the Walrus cannot finish downloading the image to the Node Controller because
 		the Node Controller has not allotted sufficient disk space for the download. Starting with
 		Eucalyptus 3.2, if the user attempts to launch an instance with a VM type that is too small, they
 		will receive an on-screen warning and the operation will terminate. </p>
<section>
	<title>Available VM Types</title>
	<p>Eucalyptus offers the following VM types.</p>
	
	<table>
		<tgroup cols="5">
			<thead>
				<row>
					<entry>Instance Family</entry>
					<entry>Instance Type</entry>
					<entry>Virtual Cores</entry>
					<entry>Disk Size</entry>
					<entry>Memory</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>General purpose</entry>
					<entry>m1.small</entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
				</row>
				<row>
					<entry>General purpose</entry>
					<entry>m1.medium</entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
				</row>
				<row>
					<entry>General purpose</entry>
					<entry>m1.large</entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
				</row>
				<row>
					<entry>General purpose</entry>
					<entry>m1.xlarge</entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
				</row>
				<row>
					<entry>General purpose</entry>
					<entry>m3.xlarge</entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
				</row>
				<row>
					<entry></entry>
					<entry>m3.2xlarge</entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
				</row>
				<row>
					<entry></entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
				</row>
				<row>
					<entry></entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
				</row>
				<row>
					<entry></entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
				</row>
				<row>
					<entry></entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
				</row>
				<row>
					<entry></entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
				</row>
				<row>
					<entry></entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
					<entry></entry>
				</row>
			</tbody>
		</tgroup>
	</table>
</section>
 	
 </conbody>
</concept>
