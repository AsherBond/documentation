<?xml version="1.0" encoding="UTF-8"?>
<!--This work by Eucalyptus Systems is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. See the accompanying LICENSE file for more information.-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="autoscaling_concepts_auto_scaling_policy">
 <title>Understanding Auto Scaling Policies</title>
 <shortdesc></shortdesc>
 <conbody>
  <p>An auto scaling policy defines how to perform scaling actions in response to CloudWatch alarms.
   Auto scaling policies can either <i>scale-in</i>, which terminates instances in your auto scaling
   group, or <i>scale-out</i>, which will launch new instances in your auto scaling group. You can
   define an auto scaling policy based on demand, or based on a fixed schedule. </p>
  <p><b>Demand-Based Auto Scaling Policies</b></p>
  <p>Demand-based auto scaling policies scale your application dynamically based on CloudWatch
   metrics (such as average CPU utilization) gathered from the instances running in your scaling
   group. For example, you can configure a CloudWatch alarm to monitor the CPU usages of the
   instances in your auto scaling group. A CloudWatch alarm definition includes <i>thresholds</i> -
   minimum and maximum values for the defined metric - that will cause the alarm to fire. </p>
  <p>For example, you can define the lower and upper thresholds of the CloudWatch alarm at 40% and
   80% CPU usage. Once you've created the CloudWatch alarm, you can create a scale-out policy that
   launches 10 new instances when the CloudWatch alarm breaches the upper threshold (the average CPU
   usage is at or above 80%), and a scale-in policy that terminates 10 instances when the CloudWatch
   alarm breaches the lower threshold (the average CPU usage of the instances in the auto scaling
   group falls below 40%). Your auto scaling group will execute the approprate auto scaling policy
   when it receives the message from the CloudWatch alarm.</p>
  <note>For more information on CloudWatch, go to <xref href="using_monitoring.dita">Using CloudWatch</xref>.</note>
  <p>For more information, go to <xref href="autoscaling_examples_scaling_plan_demand.dita">Configuring a Demand-Based Scaling Policy</xref>.</p>
  <!--<p><b>Schedule-Based Auto Scaling Policies</b></p>
  <p>Schedule-based auto scaling policies scale your application at predefined times. These can be
   useful for when your application has predictable load levels at specific times - for example, you
   could configure a schedule-based policy to scale-in your auto scaling group during off-peak hours
   and then scale it back out during busier times. You can configure schedule-based policies to
   scale on a recurring or one-time-only basis.</p>
  <p>For more information, go to <xref href="autoscaling_examples_scaling_plan_schedule.dita">Configuring a Schedule-Based Scaling Policy</xref>.</p>-->
 </conbody>
</concept>
