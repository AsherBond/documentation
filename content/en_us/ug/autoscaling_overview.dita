<?xml version="1.0" encoding="UTF-8"?>
<!--This work by Eucalyptus Systems is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. See the accompanying LICENSE file for more information.-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="autoscaling_overview">
 <title>How Auto Scaling Works</title>
 <shortdesc></shortdesc>
 <conbody>
  <p>Eucalyptus Auto Scaling is designed to address a common web application scenario: that you are
   running multiple copies of an application across several identical instances to adequately handle
   a certain volume of user requests. Eucalyptus Auto Scaling can help you make more efficient use
   of the computing resources in your cloud by automatically launching and terminating these
   instances, based on metrics and/or a schedule that you can define. There are three main auto
   scaling components that work together to provide this functionality: the <i>auto scaling
    group</i>, the <i>launch configuration</i>, and the <i>scaling plan</i>. </p>
  <p>The <i>auto scaling group </i>contains the information about the instances that will be
   actually be used for scaling operations. The auto scaling group defines the minimum, desired, and
   maximum number of instances that you will use to scale your application.</p>
  <p>The <i>launch configuration</i> contains all of the information necessary for auto scaling to
   launch instances, including instance type, image ID, key pairs, security groups, and block device
   mappings.</p>
  <p>The <i>scaling policy</i> defines how to perform scaling actions. Scaling policies can execute
   automatically in response to CloudWatch alarms, or they you can execute them manually.</p>
  <p>In addition to performing scaling operations based on the criteria defined in the scaling plan,
   auto scaling will periodically perform health checks to ensure that the instances in your auto
   scaling group are up and running. If an instance is determined to be unhealthy, auto scaling will
   terminate that instance and launch a new instance in order to maintain the minimum or desired
   number of instances in the scaling group.</p>
 </conbody>
</concept>
