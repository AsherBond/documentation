<?xml version="1.0" encoding="UTF-8"?>
<!--This work by Eucalyptus Systems is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. See the accompanying LICENSE file for more information.-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="monitoring_oview">
 <title>How CloudWatch Works</title>
 <shortdesc></shortdesc>
 <conbody>
 	<p>CloudWatch is a web service that enables you to monitor, manage, and publish various metrics, as well as configure alarm actions based on data from metrics.</p>
 	
 	<p>CloudWatch monitoring enables you to collect, analyze, and view system and application metrics so
 	that you can make operational and business decisions more quickly and with greater confidence. You
 	can use CloudWatch to collect metrics about your cloud resources, such as the performance of your instances. You can also publish your own metrics directly to CloudWatch.</p>
 	
 	<p>CloudWatch alarms help you implement decisions more easily by enabling you to send notifications or automatically make changes to the resources you are monitoring, based on rules that you define. For example, you can create alarms that initiate Auto Scaling and Simple Notification Service actions on your behalf. For more information about alarms, see Alarms.</p>
 	
 <p>A common use for CloudWatch is to keep your applications and services healthy and running
 	efficiently. For example, you can use CloudWatch to discover that your website runs best when network traffic remains below a certain threshold level on your instances. You can then create an automated procedure to ensure that you always have the right number of instances to match the amount of traffic you have. You can also use Amazon CloudWatch to diagnose problems by looking at system performance before and after a problem occurs. Amazon CloudWatch helps you identify the cause and verify your fix by tracking performance in real time. For example, you can set up Amazon CloudWatch to email you right away when your application slows down, go back and discover that a particular database was being overloaded, and later watch response times come back up to speed.</p>
 	
 	
 </conbody>
</concept>
