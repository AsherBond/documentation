<?xml version="1.0" encoding="UTF-8"?>
<!--This work by Eucalyptus Systems is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. See the accompanying LICENSE file for more information.-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_fqv_zms_1h">
 <title>CPU Over Commitment</title>
 <conbody>
  <p>By default, each physical CPU core on a Node Controller is available for assignment to an
   instance.  For example, a single-CPU instance would be assigned a single physical CPU core
   whereas a quad-CPU instance would be assigned four physical CPU cores.  If a Node Controller has
   eight-cores it can support eight single-CPU instances, or four dual-CPU instances, or two
   quad-CPU instances.  If the physical CPU cores are hyperthreaded, it doubles the number of
   physical cores available for assignment to instances.  If you have four Node Controllers, each
   with eight physical hyperthreaded cores, then your cloud could run a maximum of 64 single-CPU
   instances.</p>
  <p>However, it is possible to configure each individual Node Controller to behave as though they
   have more physical CPU cores available they actually do. On each Node Controller modify the
    <cmdname>MAX_CORES="n"</cmdname> entry in the
    <filepath>/etc/eucalyptus/eucalyptus.conf</filepath> file if you wish to configure the cloud to
   support CPU over commitment. Set the value <cmdname>n</cmdname> to be equal to the number of
   physical CPU cores you want the Node Controller to assume that it has.</p>
  <p>If a Node Controllerâ€™s CPUs are over committed, Eucalyptus relies on the underlying hypervisor
   for fair CPU resource scheduling.</p>
  <p>.</p>
 </conbody>
</concept>
