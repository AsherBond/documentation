<?xml version="1.0" encoding="UTF-8"?>
<!--This work by Eucalyptus Systems is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. See the accompanying LICENSE file for more information.-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_5f3_4xj_vf">
 <title>Policy Language</title>
 <conbody>
  <p>Policies are written in JavaScript Object Notation (JSON) format, which is a text-based data
   interchange format compatible with the AWS IAM policy language. A policy can contain one or more
   permission statements, which specify whether to <i>Allow</i> or <i>Deny</i> a list of actions to
   be performed on a list of resources under certain conditions. Here is an example: </p>
  <p/>
  <image href="images/Policy-Language.png" placement="break" id="image_db5_1yj_vf" scale="70"/>
  <p/>
  <p>The <i>Version</i> is the access policy language version. This is an optional element. It often
   contains the date the policy was written.</p>
  <p>The <i>Statement</i> is the main element for a policy.  The <i>Statement</i> element contains
   an array of individual elements. Each individual element is a distinct JSON block enclosed in
   curly brackets { } and separated by a comma.   For example; "Statement":[{...},{...},{...}].</p>
  <p>The <i>Sid</i> is the optional statement ID.   If statement IDs are used, each statement in a
   policy document should have a unique <i>Sid</i>.  The <i>Sid</i> can include an alpha-numeric
   string.</p>
  <p>The policy statement above, if applied to a user or group, would allow all actions on any
   resource (note the use of wild cards in the <i>Action</i> and <i>Resource</i> elements.)   Such a
   user or group would have administration-like privileges in the cloud.</p>
  <p>The <i>Statement</i> above does not include a <i>Condition</i> element.   A later example will
   include a <i>Condition</i> element.</p>
 </conbody>
</concept>
