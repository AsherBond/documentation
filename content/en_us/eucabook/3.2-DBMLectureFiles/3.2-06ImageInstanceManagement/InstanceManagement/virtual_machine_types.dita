<?xml version="1.0" encoding="UTF-8"?>
<!--This work by Eucalyptus Systems is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. See the accompanying LICENSE file for more information.-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_jwm_vbz_1h">
 <title>Virtual Machine Types (vmtypes)</title>
 <conbody>
  <p>A virtual machine type, known as a vmtype, defines the number of CPUs, the size of memory, and
   the size of storage that is given to an instance when it boots. There are five pre-defined
   vmtypes in Eucalyptus. You can change the quantity of resources associated with each of the five
   vmtypes, but you cannot change the name of the vmtypes or the number of vmtypes available. If you
   customize the sizes they must be well-ordered.  That means that the CPU, memory, and storage
   sizes of the next vmtype must be equal to, or larger than, the size of the preceding vmtype.  </p>
  <p/>
  <p>
   <image href="images/Virtual-Machine-Types.png" placement="break" id="image_lbg_ddz_1h" scale="90"/>
  </p>
  <p/>
  <p>The vmtype used to instantiate an EMI must have a defined disk size larger then the EMI file.
   If a 6GB EMI is loaded into an instance with a vmtype defined with a 5GB disk, it will fail to
   boot. The status of the instance will show as <i>pending</i>.  The pending status is the result
   of the fact that the Walrus cannot finish downloading the image to the Node Controller because
   the Node Controller has not allotted sufficient disk space for the download. Starting with
   Eucalyptus 3.2, if the user attempts to launch an instance with a vmtype that is too small, they
   will recieve an on-screen warning and the operation will terminate. </p>
 	
 	<p></p>
 	<table>
 		<tgroup cols="2">
 			<thead>
 				<row>
 					<entry>Family</entry>
 					<entry>Description</entry>
 				</row>
 			</thead>
 			<tbody>
 				<row>
 					<entry>Cluster Compute</entry>
 					<entry>Have a very large amount of CPU coupled with increased networking performance. They're well-suited for High Performance Compute (HPC) applications and other demanding network-bound applications. For more information, see Overview.</entry>
 				</row>
 				<row>
 					<entry></entry>
 					<entry></entry>
 				</row>
 				<row>
 					<entry></entry>
 					<entry></entry>
 				</row>
 			</tbody>
 		</tgroup>
 	</table>
 </conbody>
</concept>
<!--Family	Description

Cluster GPU
Provide general-purpose graphics processing units (GPUs), with proportionally high CPU and increased network performance for applications that benefit from highly parallelized processing. They're well-suited for HPC applications as well as rendering and media processing applications. For more information, see Overview.
High CPU
Have proportionally more CPU resources than memory (RAM). They're well-suited for compute-intensive applications.
High I/O	Provide tens of thousands of low-latency, random I/O operations per second (IOPS) to an application. They're well-suited for NoSQL databases, clustered databases, and OLTP (online transaction processing) systems. For more information, see High I/O Instances.
High Memory
Have proportionally more memory resources. They're well suited for high-throughput applications, such as database and memory caching applications.
High-Memory Cluster
Have large amounts of memory coupled with high CPU and network performance. These instances are well suited for in-memory analytics, graph analysis, and scientific computing applications.
High Storage	Provide very high storage density and high sequential read and write performance per instance. They are well-suited for data warehousing, Hadoop/MapReduce, and parallel file systems. For more information, see High Storage Instances.
Micro
Provide a small amount of consistent CPU resources and enable you to burst CPU capacity when additional cycles are available. They're well-suited for lower throughput applications and websites that consume significant compute cycles periodically. For more information, see Micro Instances.
Standard
Have memory-to-CPU ratios suitable for most general-purpose applications.-->