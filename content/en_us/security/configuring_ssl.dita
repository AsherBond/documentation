<?xml version="1.0" encoding="UTF-8"?>
<!--This work by Eucalyptus Systems is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. See the accompanying LICENSE file for more information.-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="configuring_ssl">
	<title>Configure SSL</title>
	<shortdesc>In order to connect to Eucalyptus using SSL, you must have a valid
		certificate for the Cloud Controller (CLC). You must also be running
		the Cloud Controller and Cluster Controller (CC) on separate
		machines.</shortdesc>
	<conbody>

		<section>
			<title>Create a Keystore</title>
			<p>Eucalyptus uses a PKCS12-format keystore. If you are using a
				certificate signed by a trusted root CA, use the following
				command to convert your trusted certificate and key into an
				appropriate format:</p>
			<codeblock>openssl pkcs12 -export -in [YOURCERT.crt] -inkey [YOURKEY.key] \
 -out tmp.p12 -name [key_alias]</codeblock>
			<p>Note: this command will request an export password, which is used
				in the following steps.</p>
			<p>Save a backup of the Eucalyptus keystore, at
					<filepath>/var/lib/eucalyptus/keys/euca.p12</filepath>, and
				then import your keystore into the Eucalyptus keystore as
				follows:</p>
			<codeblock>keytool -importkeystore \ 
-srckeystore tmp.p12 -srcstoretype pkcs12 -srcstorepass [export_password] \ 
-destkeystore /var/lib/eucalyptus/keys/euca.p12 -deststoretype pkcs12 \ 
-deststorepass eucalyptus -alias [key_alias] \ 
-srckeypass [export_password] -destkeypass [export_password]</codeblock>
		</section>

		<section>
			<title>Enable the Cloud Controller to Use the Keystore</title>
			<p>Run the following commands on the Cloud Controller (CLC):</p>
			<codeblock>euca-modify-property -p bootstrap.webservices.ssl.server_alias=[key_alias]
euca-modify-property -p \ bootstrap.webservices.ssl.server_password=[export_password]</codeblock>
			<p>Restart the CLC by running <codeph>service eucalyptus-cloud
					restart</codeph> or <codeph>/etc/init.d/eucalyptus-cloud
					restart</codeph></p>
		</section>
		
		<section>
			<title>Disable Automatic SSL Certificate Generation</title>
			<p>When the user console service is run for the first time, it will
				generate a self-signed certificate and key which will be put into
				<codeph>/etc/eucalyptus-console/</codeph>. If you do not want to
				have a certificate and key generated and would like to use your own, you
				can disable automatic generation of the certificate and key.</p>
			
			
			<p>To disable automatic generation of the console certificate and
				key, add the following line to
				<codeph>/etc/sysconfig/eucalyptus-console</codeph>:</p>
			<codeblock>GENERATE_CERT=NO</codeblock>
			<note type="tip">If you choose not to use the default SSL certificate
				and key, you must provide your own. For more
				information on generating self-signed SSL
				certificates, go to <xref
					href="http://www.akadia.com/services/ssh_test_certificate.html"
					scope="external" format="html"
					>http://www.akadia.com/services/ssh_test_certificate.html</xref>. 
			</note>
			
		</section>
		<section>
		<title>Configure SSL Certificate Paths</title>
		<p>If youâ€™ve chosen not to use the self-signed certificate and key
			that are provided by the User Console, you will need to provide your
			own. </p>
		
				<p>To optionally specify an SSL certificate to run your console over
					Secure HTTP, modify the <codeph>sslcert</codeph> and
						<codeph>sslkey</codeph> entries in the
						<codeph>[server]</codeph> section of the configuration
						file with paths to your SSL certificate and key files. For
						example:</p>
					
						<codeblock>sslcert=/example/path/server.crt
sslkey=/example/path/server.key</codeblock>
					
						<note type="tip">
							<p> For more information on generating self-signed SSL
								certificates, go to <xref
									href="http://www.akadia.com/services/ssh_test_certificate.html"
									scope="external" format="html"
									>http://www.akadia.com/services/ssh_test_certificate.html</xref>.
							</p>
						</note>

		</section>

		<section>
			<title>Optional: Configure the Cloud Controller and Walrus to
				redirect requests on port 443 to port 8773</title>
			<p>The Cloud Controller and Walrus listen for both SSL and non-SSL
				connections on port 8773. If you have other tools that expect to
				speak SSL on port 443, you should forward requests on that port
				to port 8773. For example, the following iptables command can be
				used:</p>
			<codeblock>iptables -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-ports 8773</codeblock>
		</section>
	
	</conbody>
</concept>
